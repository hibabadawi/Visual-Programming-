// <auto-generated />
using System;
using HospitalManagementSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HospitalManagementSystem.Migrations
{
    [DbContext(typeof(HospContext))]
    [Migration("20211214192206_CreateHospitalDB")]
    partial class CreateHospitalDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("HospitalManagementSystem.Doctor", b =>
                {
                    b.Property<int>("DocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocPassword")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("DocSpciality")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocID");

                    b.ToTable("Doctors");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Doctor");
                });

            modelBuilder.Entity("HospitalManagementSystem.Doctor_Pateint", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DocID")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorDocID")
                        .HasColumnType("int");

                    b.Property<int?>("PatientPatID")
                        .HasColumnType("int");

                    b.Property<string>("diagnose")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DoctorDocID");

                    b.HasIndex("PatientPatID");

                    b.ToTable("Doctor_Pateint");
                });

            modelBuilder.Entity("HospitalManagementSystem.Hospital", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("HospLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("HospitalManagementSystem.Junior", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Juniors");
                });

            modelBuilder.Entity("HospitalManagementSystem.Patient", b =>
                {
                    b.Property<int>("PatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Enternace_Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("PatDOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SectionSecID")
                        .HasColumnType("int");

                    b.Property<string>("Sickness")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gender")
                        .HasColumnType("int");

                    b.HasKey("PatID");

                    b.HasIndex("SectionSecID");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystem.Section", b =>
                {
                    b.Property<int>("SecID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("HospitalID")
                        .HasColumnType("int");

                    b.Property<string>("SecName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patient_capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patients_gender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SecID");

                    b.HasIndex("HospitalID");

                    b.ToTable("sections");
                });

            modelBuilder.Entity("HospitalManagementSystem.Consultant", b =>
                {
                    b.HasBaseType("HospitalManagementSystem.Doctor");

                    b.Property<string>("Clinic_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Consultant");
                });

            modelBuilder.Entity("HospitalManagementSystem.Doctor_Pateint", b =>
                {
                    b.HasOne("HospitalManagementSystem.Doctor", "Doctor")
                        .WithMany("doctor_Pateints")
                        .HasForeignKey("DoctorDocID");

                    b.HasOne("HospitalManagementSystem.Patient", "Patient")
                        .WithMany("doctor_Pateints")
                        .HasForeignKey("PatientPatID");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HospitalManagementSystem.Patient", b =>
                {
                    b.HasOne("HospitalManagementSystem.Section", "Section")
                        .WithMany("Patients")
                        .HasForeignKey("SectionSecID");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("HospitalManagementSystem.Section", b =>
                {
                    b.HasOne("HospitalManagementSystem.Hospital", "Hospital")
                        .WithMany("Sections")
                        .HasForeignKey("HospitalID");

                    b.Navigation("Hospital");
                });

            modelBuilder.Entity("HospitalManagementSystem.Doctor", b =>
                {
                    b.Navigation("doctor_Pateints");
                });

            modelBuilder.Entity("HospitalManagementSystem.Hospital", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("HospitalManagementSystem.Patient", b =>
                {
                    b.Navigation("doctor_Pateints");
                });

            modelBuilder.Entity("HospitalManagementSystem.Section", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
